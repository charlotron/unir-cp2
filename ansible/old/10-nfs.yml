---

- hosts: nfs
  gather_facts: yes
  tasks:
    - name: Install nfs server packages
      become: true
      apt:
        name: nfs-kernel-server

    - name: Create mountable dir
      become: true
      file: path=/srv/nfs state=directory mode=777 owner=root group=root

    - name: Clean exports files (to allow multiple runs)
      become: true
      shell: echo "#==== File generated by ansible from hosts data" > /etc/exports

    - name: (only for local nfs) Create one line for each exports (comment with the name of the host jumpline /srv/nfs and ip then jumpline)
      become: true
      shell: echo "#{{ item }}\n/srv/nfs\t{{ hostvars[item].ansible_host }}(rw,no_root_squash,no_subtree_check)\n" >> /etc/exports
      loop: "{{ [groups['workers'],groups['master']] | flatten(1) }}" #This takes two lists and unifies them as only one
      when: "{{ hostvars['nfs.local'].ansible_host | regex_search('^((10)|(192)|(172)).*$') }}" #For local ips

    - name: (only for remote nfs) Create a wildcarded exports entry (removed when used in azure)
      become: true
      shell: echo "#Allow all to mount\n/srv/nfs\t*(rw,no_root_squash,no_subtree_check)\n" >> /etc/exports
      when: "{{ not hostvars['nfs.local'].ansible_host | regex_search('^((10)|(192)|(172)).*$') }}" #For remote ips

    - name: run {{item}} as service
      become: true
      shell: service {{item}} start
      loop:
      - rpcbind
      - nfs-kernel-server

    - name: Use new configuration of /etc/exports
      become: true
      shell: exportfs -r
