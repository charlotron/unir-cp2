---

- hosts: master
  become: true
  tasks:

    # ----------- COPY KUBERNETES YML FILES -----

    - name: Clear directory
      shell: rm -rf ~/kubernetes

    - name: Create remote folder kubernetes
      file:
        path: ~/kubernetes
        state: directory
        mode: 0755

    - name: Copy local kubernetes deployments to remote machine
      copy:
        src: ../../kubernetes/
        dest: ~/kubernetes
        mode: 0777
        directory_mode:

    # ----------- CLEAR PREVIOUS PV/PVC/PODS/SVC/INGRESS -----

    - name: Check for previous ingress if any
      shell: kubectl get ingress | grep web- | cut -d' ' -f 1
      register: output

    - name: Clear previous ingress
      shell: kubectl delete ingress {{item}}
      loop: "{{ output.stdout_lines }}"
      when: output.stdout != ''

    - name: Check for previous services if any
      shell: kubectl get svc | grep web- | cut -d' ' -f 1
      register: output

    - name: Clear previous services
      shell: kubectl delete svc {{item}}
      loop: "{{ output.stdout_lines }}"
      when: output.stdout != ''

#     This has no case, it will be re-deployed
#    - name: Check for previous pods if any
#      shell: kubectl get pods | grep web- | cut -d' ' -f 1
#      register: output
#
#    - name: Clear previous pods
#      shell: kubectl delete pods {{item}}
#      loop: "{{ output.stdout_lines }}"
#      when: output.stdout != ''

    - name: Check for previous pvc if any
      shell: kubectl get pvc | grep web- | cut -d' ' -f 1
      register: output

    - name: Clear previous pvc
      shell: kubectl delete pvc --grace-period=0 --force {{item}}
      loop: "{{ output.stdout_lines }}"
      when: output.stdout != ''

    - name: Check for previous pv if any
      shell: kubectl get pv | grep web- | cut -d' ' -f 1
      register: output

    - name: Clear previous pv
      shell: kubectl delete pv --grace-period=0 --force {{item}}
      loop: "{{ output.stdout_lines }}"
      when: output.stdout != ''

    - name: Check for previous deployments if any
      shell: kubectl get deployments | grep web- | cut -d' ' -f 1
      register: output

    - name: Clear previous deployments
      shell: kubectl delete deployments {{item}}
      loop: "{{ output.stdout_lines }}"
      when: output.stdout != ''

    # ----------- CREATE NEW PV/PODS/SVC/INGRESS -----

    - name: Execute every deployment in 0-persistent-volume dir
      shell: for i in ~/kubernetes/0-persistent-volume/*.yml; do kubectl apply -f  $i; done;

    - name: Execute every deployment in 1-deployments dir
      shell: for i in ~/kubernetes/1-deployments/*.yml; do kubectl apply -f  $i; done;

    - name: Execute every service in 2-services dir
      shell: for i in ~/kubernetes/2-services/*.yml; do kubectl apply -f  $i; done;

    - name: Execute every ingress in 3-ingress dir
      shell: for i in ~/kubernetes/3-ingress/*.yml; do kubectl apply -f  $i; done;

    # ----------- EXPOSE INGRESS PORT -----

    - name: Detect exposed port
      shell: kubectl get svc --namespace=haproxy-controller | grep NodePort | awk '{print $5}' | perl -p -e 's/^.*80:([0-9]+).*$/$1/'
      register: port

    - name: Save port in local file
      local_action: copy content="{{ port.stdout_lines[0] }}" dest="/tmp/kubernetes_ingress_port" mode=0777
