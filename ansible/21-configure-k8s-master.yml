---

- hosts: master
  become: true
  gather_facts: yes
  tasks:

    # ----------- INIT CLUSTER -----

    - name: Clear kubernetes cluster if already set any
      shell:  kubeadm reset -f

    - name: Initialize kubernetes cluster
      shell:  kubeadm init --apiserver-advertise-address={{hostvars[inventory_hostname].ansible_host}} --pod-network-cidr=10.10.100.0/24

    - name: Preparing .kube dir
      file:
        path: ~/.kube
        state: directory
        mode: 0755

    - name: Copy admin.conf to .kube dir
      copy:
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        remote_src: yes

    # ----------- PREPARE JOIN COMMAND FOR WORKERS -----

    - name: Generate new joining token (for workers)
      shell: kubeadm token create --print-join-command
      register: kubernetes_join_command

    - name: Printing generated join command
      debug:
        msg: "{{ kubernetes_join_command.stdout }}"

    - name: Save join command in local file
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }} --v=5" dest="/tmp/buffer/kubernetes_join_cmd" mode=0777

    # ----------- INSTALL SDN: CALICO -----

    - name: Install SDN - Calico
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

    # ----------- INSTALL INGRESS CONTROLLER -----

    #- name: Install Ingress Controller (nginx-ingress)
    #  shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml

    - name: Install Haproxy Ingress
      shell: kubectl apply -f https://raw.githubusercontent.com/haproxytech/kubernetes-ingress/master/deploy/haproxy-ingress.yaml

    # ----------- CREATE AN ADMIN USER TO CONTROL KUBERNETES -----

    - name: Create group kubeadm if not found
      shell:  groupadd kubeadmin || true

    - name: Create user kubeadm if not found
      shell:  useradd -md /home/kubeadmin kubeadmin -g kubeadmin --shell /bin/bash || true

    - name: Preparing .kube dir for user kubeadmin
      file:
        path: /home/kubeadmin/.kube
        state: directory
        mode: 0755
        owner: kubeadmin

    - name: Copy admin.conf to .kube dir
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/kubeadmin/.kube/config
        remote_src: yes
        owner: kubeadmin

    - name: Ensure there is not kubeadmin entry in sudoers file
      lineinfile: dest=/etc/sudoers
                  state=absent
                  search_string="kubeadmin"

    - name: Add kubeadmin to sudoers file
      shell:  echo "kubeadmin ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers